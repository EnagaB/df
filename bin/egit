#!/usr/bin/env bash
set -u

# parameters
declare -r __git_editor='nano'
declare -r __git_pager='cat'

function __help_text() {
  echo "egit - Wrapper command for git."
  echo ""
  echo "Usage: egit <command> <args>"
  echo ""
  echo "command and args:"
  echo ""
  echo "  log                       : Display commit logs."
  echo "          without_arguments : Display commit oneline logs in reverse."
  echo ""
  echo "  commit                    : Record changes to the repository."
  echo "          without_arguments : Add all files and commit."
  echo ""
  echo "  gconfig                   : Get or set global options."
  echo "          without_arguments : Display global options and gconfig help information."
  echo "          setup             : Set basic config (editor, pager, etc.)."
  echo "          email <user-email>: Set user.email."
  echo "          name  <user-name> : Set user.name."
  echo ""
  echo "  help                      : Display help information."
  echo "                            : Also, if command is not given, display that."
}

function __echo_err() {
  echo "Error: $@"
  echo "Help command is 'egit help'"
}

function __gconfig() {
  if [[ "$#" -eq 0 ]]; then
    git config --global --list
    return
  fi
  local -r subcmd="$1"
  shift 1
  if [[ "$subcmd" = "setup" ]]; then
    echo "egit setup"
    echo "  Set editor to '${__git_editor}'."
    git config --global core.editor "$__git_editor"
    echo "  Set pager to '${__git_pager}'."
    git config --global core.pager "$__git_pager"
    echo "  Set color.ui to auto."
    git config --global color.ui auto
    echo "  Set push.default to simple."
    git config --global push.default simple
    echo "  Save credential to cache for a hour."
    git config --global credential.helper 'cache --timeout 3600'
    echo "  Confirm the case of filename."
    git config --global core.ignorecase false
    echo "  Not change the line feed code."
    git config --global core.autocrlf false
    git config --global core.safecrlf true
    echo "  Support Japanese path."
    git config --global core.quotepath false
  elif [[ "$subcmd" = "email" ]]; then
    git config --global user.email "$1"
  elif [[ "$subcmd" = "name" ]]; then
    git config --global user.name "$1"
  else
    __echo_err "Number of arguments '$#' for egit-gconfig is wrong."
  fi
}

function __commit() {
  git add -A || return 1
  git commit || return 1
}

function __log() {
  git log --reverse --oneline
}

# no arguments
if [[ "$#" -eq 0 ]];then
  __help_text
  exit 0
fi

# get command
declare -r cmd="$1"
shift 1

if [[ "$cmd" = "help" ]]; then
  __help_text
elif [[ "$cmd" = "gconfig" ]]; then
  __gconfig "$@"
elif [[ "$cmd" = "commit" ]]; then
  __commit "$@"
elif [[ "$cmd" = "log" ]]; then
  __log "$@"
else
  __echo_err "Given command '${cmd}' is wrong."
fi

# EOF
