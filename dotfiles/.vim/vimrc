if !1
    finish
endif
noremap j gj
noremap k gk
noremap! <C-f> <right>
noremap! <C-b> <left>
inoremap <C-a> <C-o>0
inoremap <C-e> <C-o>$
cnoremap <C-a> <C-b>
cnoremap <C-e> <C-e>
noremap! <C-h> <bs>
noremap! <C-d> <del>
inoremap <C-y> <C-o>p
cnoremap <C-y> <C-r>"
noremap! <C-q> <C-v>
nnoremap K <Nop>
nnoremap ZQ <Nop>
nnoremap ZZ <Nop>

if v:version < 800
    finish
endif

" directory path
let g:dotvim_dir = expand("<sfile>:p:h")
let g:after_dir = g:dotvim_dir . '/after'

" basic settings
if has('vim_starting')
    set encoding=utf-8
endif

command! -nargs=1 SourceVimFile call <SID>source_vimfile(<args>)
function! s:source_vimfile(path)
    try
        execute 'source ' . a:path
    catch
        echomsg 'ERROR: Failed to source ' . a:path
        echomsg v:exception
    endtry
endfunction

" load basic
SourceVimFile g:dotvim_dir . '/config.vim'
SourceVimFile g:dotvim_dir . "/utils.vim"

" set path
set runtimepath&
set packpath&
if match(&runtimepath, g:dotvim_dir) == -1
    execute 'set runtimepath ^=' . g:dotvim_dir
endif
if match(&runtimepath, g:after_dir) == -1
    execute 'set runtimepath +=' . g:after_dir
endif

" set basic settings
filetype plugin indent on
if ! exists("g:syntax_on")
    syntax enable
endif

SourceVimFile g:dotvim_dir . '/packages/configs_before.vim'
SourceVimFile g:dotvim_dir . '/packages/manager.vim'
SourceVimFile g:dotvim_dir . '/packages/configs_after.vim'
SourceVimFile g:dotvim_dir . '/keybindings.vim'
SourceVimFile g:dotvim_dir . '/tab_line.vim'
SourceVimFile g:dotvim_dir . '/status_line.vim'
SourceVimFile g:dotvim_dir . '/misc.vim'

if has('gui_running')
    SourceVimFile g:dotvim_dir . '/gui.vim'
endif
